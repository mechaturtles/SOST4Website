{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","constants/routes.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/Appoinments/index.js","components/AboutUs/index.js","components/App/index.js","index.js","images/Logo.png"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","HOME","className","onClick","to","ROUTES","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","src","logo","alt","SignOut","NavigationNonAuth","Navigation","Landing","INITIAL_STATE","firstName","lastName","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","updateProfile","displayName","set","catch","preventDefault","onChange","target","name","isInvalid","type","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","time","GivenData","events","map","e","systemTime","values","coords","sort","v","i","moment","format","HomePage","data","chartData","console","log","providerData","valueField","argumentField","color","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","Object","keys","key","off","UserList","username","currentDate","schedulerData","startDate","endDate","title","AppointmentsPage","startDayHour","endDayHour","AboutUs","exact","path","component","LandingPage","AccountPage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.eadf8e3b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nrequire('dotenv').config();\r\n\r\n//Keys are stored in a .env file, so adding one is recommended over changing the following.\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  };\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n        this.auth = app.auth();\r\n        this.db = app.database();\r\n    }\r\n\r\n    // Auth API methods\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n    \r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n \r\n    doPasswordUpdate = password =>\r\n        this.auth.currentUser.updatePassword(password);\r\n\r\n    // User API methods\r\n\r\n    user = uid => this.db.ref(`users/${uid}`);\r\n\r\n    users = () => this.db.ref('users');\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n \r\nexport default Firebase;\r\n \r\nexport { FirebaseContext, withFirebase };","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const APPOINTMENTS = '/appointments';\r\n","import React from 'react';\r\n \r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Link } from 'react-router-dom';\r\n \r\nconst SignOutButton = ({ firebase }) => (\r\n  <li className = \"Top-options\" onClick ={firebase.doSignOut}> <Link to={ROUTES.HOME} className = \"Top-link\"> Sign Out </Link> </li>\r\n);\r\n \r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\n \r\nconst AuthUserContext = React.createContext(null);\r\n \r\nexport default AuthUserContext;","import React from 'react';\r\n \r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n \r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n \r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n \r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n \r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n \r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n \r\n  return withFirebase(WithAuthentication);\r\n};\r\n \r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n \r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n \r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n \r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n \r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n \r\nexport default withAuthorization;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../index.css';\r\nimport logo from '../../images/Logo.png';\r\n\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nimport { AuthUserContext } from '../Session';\r\n \r\nconst Navigation = () => (\r\n  <div className = \"no-margin\">\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>\r\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\n//Admin should be hidden for non-admin roles\r\nconst NavigationAuth = () => (\r\n  <ul className = \"Top-bar\"> \r\n          <li className = \"Top-logo\"> <Link to={ROUTES.HOME} className = \"Top-link\"> <img src = {logo} alt=\"My Health Radar\" className = \"Top-logo-image\"></img> </Link> </li>\r\n          <SignOutButton />\r\n          <li className = \"Top-options\"> <Link to={ROUTES.ACCOUNT} className = \"Top-link\"> Profile </Link> </li>\r\n          <li className = \"Top-options\"> <Link to={ROUTES.ADMIN} className = \"Top-link\"> Past Data </Link> </li>\r\n          <li className = \"Top-options\"> <Link to={ROUTES.HOME} className = \"Top-link\"> Contact Provider </Link> </li>\r\n          <li className = \"Top-options\"> <Link to={ROUTES.APPOINTMENTS} className = \"Top-link\"> Appointments </Link> </li>\r\n          <li className = \"Top-options\"> <Link to={ROUTES.HOME} className = \"Top-link\"> Home </Link> </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <div className = \"Top-bar\"> \r\n          <li className = \"Top-logo\"> <Link to={ROUTES.LANDING} className = \"Top-link\"> <img src = {logo} alt=\"My Health Radar\" className = \"Top-logo-image\"></img> </Link> </li>\r\n          <li className = \"Top-options\"> <Link to={ROUTES.HOME} className = \"Top-link\"> Sign In </Link> </li>\r\n  </div>\r\n);\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport '../../index.css';\r\n \r\nconst Landing = () => (\r\n  <div>\r\n        <div className = \"Landing-top\">\r\n          <div className = \"Landing-first-description\"> \r\n              <header className = \"Landing-title\"> Title </header>\r\n              <p className = \"Landing-text\"> A moderate amount of information about some aspect of the solution, include some sort of symbol directly to the left of this paragraph. Perhaps bullet points could work here as well. </p> \r\n          </div>\r\n        </div>\r\n        <div className = \"Landing-second-description\"> \r\n              <header className = \"Landing-title Landing-second Landing-second-text-color\"> Title </header>\r\n          <p className = \"Landing-text Landing-second-text-color\"> A moderate amount of information about some aspect of the solution, include some sort of symbol directly to the left of this paragraph. Perhaps bullet points could work here as well. </p> \r\n        </div>\r\n  </div>\r\n);\r\n \r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n\r\nconst SignUpPage = () => (\r\n  <div className = \"Sign-in\">\r\n    <div className = \"Sign-in-page\">\r\n      <div className = \"Sign-in-page-text\">\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n    </div>\r\n  </div>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = { ...INITIAL_STATE};\r\n  }\r\n\r\n  // Routes to Home after successful submission\r\n  onSubmit = event => {\r\n    const { firstName, lastName, email, passwordOne } = this.state;\r\n \r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .updateProfile({displayName: firstName})\r\n          .set({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n          });\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n  };\r\n \r\n  onChange = event => {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        passwordOne,\r\n        passwordTwo,\r\n        error,\r\n      } = this.state;\r\n\r\n    const isInvalid =\r\n    passwordOne !== passwordTwo ||\r\n    passwordOne === '' ||\r\n    email === '' ||\r\n    firstName === '' ||\r\n    lastName === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          value = {firstName}\r\n          onChange={this.onChange}\r\n          placeholder={\"First Name\"}\r\n        />\r\n       <input\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          value = {lastName}\r\n          onChange={this.onChange}\r\n          placeholder={\"Last Name\"}\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <br />\r\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst SignUpLink = () => (\r\n  <p className = \"Sign-in-sign-up\">\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n \r\nexport default SignUpPage;\r\n \r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n \r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n \r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n \r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n \r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n \r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n  };\r\n \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const { email, error } = this.state;\r\n \r\n    const isInvalid = email === '';\r\n \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst PasswordForgetLink = () => (\r\n  <p className = \"Sign-in-forgot-pass\">\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n \r\nexport default PasswordForgetPage;\r\n \r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n \r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n \r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nconst SignInPage = () => (\r\n  <div className = \"Sign-in\">\r\n    <div className = \"Sign-in-page\">\r\n      <div className = \"Sign-in-page-text\">\r\n        <header className = \"Sign-in-header\">Sign In</header>\r\n        <SignInForm />\r\n        <PasswordForgetLink />\r\n        <SignUpLink />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n \r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n \r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n \r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n \r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n  };\r\n \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const { email, password, error } = this.state;\r\n \r\n    const isInvalid = password === '' || email === '';\r\n \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n \r\nexport default SignInPage;\r\n \r\nexport { SignInForm };","import React, {Component} from 'react';\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  LineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\nimport GivenData from '../../constants/testingData.json';\r\nimport moment from 'moment';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport firebase from 'firebase/app';\r\n\r\nvar time = GivenData.events.map(function(e) {\r\n  return e.systemTime;\r\n});\r\nvar values = GivenData.events.map(function(e) {\r\n  return e.value;\r\n});\r\nvar coords = time.sort().map( (v,i) => ({ systemTime: moment(v).format(\"hh:mm a\"), values: values.sort()[i] }) );\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: coords,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    const { data: chartData } = this.state;\r\n    console.log(firebase.auth().currentUser);\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n        <div className = \"Home\">\r\n          <div className = \"Home-header\"> <header className = \"Home-header-text\"> Welcome, {firebase.auth().currentUser.providerData[0].email}! </header><br/>\r\n          </div>\r\n          <div className = \"Home-sub\"> <header className = \"Home-sub-text\"> Your dashboard for today: </header><br/>\r\n          </div>\r\n          <div className = \"Home-body\">\r\n    \r\n            <div className = \"Body-elements\">\r\n              <div className = \"Home-chart-header\">\r\n                last hour\r\n              </div>\r\n              <div className = \"Home-chart\">\r\n                <Chart\r\n                data={chartData}>\r\n                  <ArgumentAxis />\r\n                  <ValueAxis/>\r\n                  \r\n                  <LineSeries\r\n                    name=\"Health Stats\"\r\n                    valueField=\"values\"\r\n                    argumentField=\"systemTime\"\r\n                    color=\"#004f04\"\r\n                  />\r\n\r\n                  <Animation />\r\n                </Chart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>)}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n \r\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\r\n \r\nimport { withFirebase } from '../Firebase';\r\n \r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n \r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n \r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n \r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n  };\r\n \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n \r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n \r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n \r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n \r\nconst condition = authUser => !!authUser;\r\n \r\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n \r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n \r\n        {loading && <div>Loading ...</div>}\r\n \r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withFirebase(AdminPage);","import React, {Component} from 'react';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  Toolbar,\r\n  DayView,\r\n  DateNavigator,\r\n  WeekView,\r\n  ViewSwitcher,\r\n  Appointments,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport moment from 'moment';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\n\r\nconst currentDate = moment().format(\"YYYY-MM-DD\");\r\nconst schedulerData = [\r\n  { startDate: '2020-07-20T09:45', endDate: '2020-07-20T11:00', title: 'Weekly Checkup' },\r\n  { startDate: '2020-07-23T12:00', endDate: '2020-07-23T13:30', title: 'Special Appointment' },\r\n];\r\n\r\nclass AppointmentsPage extends Component {\r\n  render() {\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n        //Similar formatting to Home page\r\n        <div className = \"Home\">\r\n          <div className = \"Home-header\"> <header className = \"Home-header-text\"> Upcoming Appointments </header><br/>\r\n          </div>\r\n          <div className = \"Home-body Appt-body\">\r\n            <div className = \"Body-elements\">\r\n              <div className = \"Appt-scheduler\">\r\n                <Scheduler\r\n                data={schedulerData}\r\n                >\r\n                  <ViewState\r\n                    currentDate={currentDate}\r\n                    color=\"white\"\r\n                  />\r\n                  <DayView\r\n                    startDayHour={9}\r\n                    endDayHour={14}\r\n                  />\r\n                  <WeekView\r\n                    startDayHour={10}\r\n                    endDayHour={19}\r\n                  />\r\n                  <Toolbar />\r\n                  <DateNavigator />\r\n                  <ViewSwitcher />\r\n                  <Appointments />\r\n                </Scheduler>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>)}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n \r\nexport default withAuthorization(condition)(AppointmentsPage);","//Working on this later\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../index.css';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nconst AboutUs = () => (\r\n  <div className = \"Bottom-bar\"> \r\n          <p><span><Link to={ROUTES.LANDING} className = \"Bottom-link\"> About Us </Link></span> <span>|</span> <span>Contact Us</span> </p>\r\n  </div>\r\n);\r\n \r\nexport default AboutUs;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n \r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport AppointmentsPage from '../Appoinments';\r\nimport AboutUs from '../AboutUs';\r\n \r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n \r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Navigation />\r\n \r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n      <Route path={ROUTES.APPOINTMENTS} component={AppointmentsPage} />\r\n      <AboutUs />\r\n    </div>\r\n  </Router>\r\n);\r\n \r\nexport default withAuthentication(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\n//Using Strict Mode\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Logo.2ba5af96.png\";"],"sourceRoot":""}